#!/usr/bin/env python3

# Copyright (C) 2014 Jason Pleau <jason@jpleau.ca>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


from subprocess import Popen, PIPE
from re import findall
from os import environ
from sys import exit
from shutil import which

mpc_cmd = ["mpc", "-p", "49000"]

# set to False if you don't want fancy utf-8 symbols
use_symbols = True

labels = {
    "symbols": {
            "playing": "",
            "paused": "",
            "stopped": "",
            "down": "",
    },
    "text": {
            "playing": "playing: ",
            "paused": "paused: ",
            "stopped": "stopped",
            "down": "down",
    }
}

text = labels["symbols"] if use_symbols else labels["text"]

def get_mpc_status():
    # requires 'mpc' to be installed and be in PATH, exit if it is not
    if which("mpc") == None:
        print("mpc not installed")
        exit()

    proc_data = Popen(mpc_cmd + ["status", "-f", ""], stdout=PIPE, stderr=PIPE).communicate()

    if proc_data[1]:
        print(text["down"])
        exit()

    return proc_data[0].decode('utf-8').split("\n")

mpc_status = get_mpc_status()

button_pressed = int(environ["BLOCK_BUTTON"]) if "BLOCK_BUTTON" in environ and len(environ["BLOCK_BUTTON"]) > 0 else 0

changed = False
if button_pressed > 0:
    if button_pressed == 1:
        changed = True
        Popen(mpc_cmd + ["toggle"], stdout=PIPE)
    elif button_pressed == 3:
        changed = True
        Popen(mpc_cmd + ["stop"], stdout=PIPE)
    elif button_pressed == 4:
        changed = True
        Popen(mpc_cmd + ["prev"], stdout=PIPE)
    elif button_pressed == 5:
        changed = True
        Popen(mpc_cmd + ["next"], stdout=PIPE)

if changed:
    mpc_status = get_mpc_status()

if len(mpc_status) == 2:
    print(text["stopped"])
else:
    status = findall("(playing|paused)", mpc_status[1])[0]
    if status == "playing":
        print(text["playing"], end="")
    elif status == "paused":
        print(text["paused"], end="")
    else:
        print("unknown")

    print(mpc_status[0])
